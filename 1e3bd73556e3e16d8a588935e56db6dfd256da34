{
  "comments": [
    {
      "key": {
        "uuid": "c5c11ec4_61f9d1de",
        "filename": "testing/mkvmuxer_tests.cc",
        "patchSetId": 11
      },
      "lineNbr": 484,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-08-30T15:45:30Z",
      "side": 1,
      "message": "Why do we need this? If cues_before_clusters.webm is garbage then we should fix that to make sure the golden file is good. If the golden file is good, then this is just an extra step.",
      "range": {
        "startLine": 484,
        "startChar": 20,
        "endLine": 484,
        "endChar": 32
      },
      "revId": "1e3bd73556e3e16d8a588935e56db6dfd256da34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5c11ec4_3a7a5e4e",
        "filename": "testing/mkvmuxer_tests.cc",
        "patchSetId": 11
      },
      "lineNbr": 484,
      "author": {
        "id": 1002431
      },
      "writtenOn": "2016-08-30T17:58:19Z",
      "side": 1,
      "message": "But without the extra step we wouldn\u0027t know that there\u0027s a potential problem with cues_before_clusters.webm-- trying to walk the cues exposes a problem (this crashes under valgrind and asan on linux x86-64).\n\nIt\u0027s quite possible that cues_before_clusters.webm is perfectly valid and the real problem is yet another mkvparser wtf, but I think this is a necessary step.\n\nMy real issue with the mkvmuxer tests we have right now is that they\u0027re all like this: \n\n1) do some stuff with mkvmuxer\n2) write new file\n3) do a bytewise file compare of new file against golden file\n\nWhat I see as the problem is that the golden file was produced using the same code that produces the new file. The only thing we\u0027re testing is that the bits output by mkvmuxer don\u0027t change. We don\u0027t know the golden file is actually valid. All the tests tell is that the bytes are the same.\n\nMaybe I\u0027m being paranoid.",
      "parentUuid": "c5c11ec4_61f9d1de",
      "revId": "1e3bd73556e3e16d8a588935e56db6dfd256da34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}