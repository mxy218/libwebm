{
  "comments": [
    {
      "key": {
        "uuid": "AAAAPn//tk0\u003d",
        "filename": "mkvparser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 750,
      "author": {
        "id": 1002833
      },
      "writtenOn": "2012-09-13T18:06:04Z",
      "side": 1,
      "message": "Get rid of this.",
      "revId": "968f1a0feede511b1694ef037404f7a0c5a12de0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//tkw\u003d",
        "filename": "mkvparser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 770,
      "author": {
        "id": 1002833
      },
      "writtenOn": "2012-09-13T18:06:04Z",
      "side": 1,
      "message": "Change this to an empty for loop.  At the top of the loop say:\n\nif ((total \u003e\u003d 0) \u0026\u0026 (pos \u003e\u003d total))\n  return E_FILE_FORMAT_INVALID;",
      "revId": "968f1a0feede511b1694ef037404f7a0c5a12de0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//tlw\u003d",
        "filename": "mkvparser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 781,
      "author": {
        "id": 1002833
      },
      "writtenOn": "2012-09-13T18:06:04Z",
      "side": 1,
      "message": "See my comments below.",
      "revId": "968f1a0feede511b1694ef037404f7a0c5a12de0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//tmQ\u003d",
        "filename": "mkvparser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 805,
      "author": {
        "id": 1002833
      },
      "writtenOn": "2012-09-13T18:06:04Z",
      "side": 1,
      "message": "This seems wrong to me.  \n\nGetUIntLength looks at a single byte in the stream (the leading byte of an MKV integer, which says how long the integer is).  If there isn\u0027t enough data available (as indicated by the \"available\" value returned by IMkvReader::Length), then GetUIntLength returns the correct value: pos (same as available).  The old algorithm did the correct thing.",
      "revId": "968f1a0feede511b1694ef037404f7a0c5a12de0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//tks\u003d",
        "filename": "mkvparser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 852,
      "author": {
        "id": 1002833
      },
      "writtenOn": "2012-09-13T18:06:04Z",
      "side": 1,
      "message": "Change this predicate as follows:\n\nif ((total \u003e\u003d 0) \u0026\u0026 ((pos + size) \u003e total))\n  return E_FILE_FORMAT_INVALID;",
      "revId": "968f1a0feede511b1694ef037404f7a0c5a12de0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//tkk\u003d",
        "filename": "mkvparser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 862,
      "author": {
        "id": 1002833
      },
      "writtenOn": "2012-09-13T18:06:04Z",
      "side": 1,
      "message": "Remove the return and the comment (it is dead code).",
      "revId": "968f1a0feede511b1694ef037404f7a0c5a12de0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}